/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.math.BigDecimal;
import java.util.List;
import javax.swing.JOptionPane;
import model.Category;
import model.Ghe;
import service.CategoryService;
import service.GheService;
import service.IdUpdateService;
import java.sql.*;

/**
 *
 * @author hodangquan
 */
public class SuaForm extends javax.swing.JFrame {

    /**
     * Creates new form SuaForm
     */
    private CategoryService categoryService;
    private GheService gheService;

    public SuaForm() {
        initComponents();

        categoryService = new CategoryService();
        gheService = new GheService();
        List<Category> categorys = categoryService.layAllCategory();
        cbbTheLoai.removeAllItems();;
        for (Category category : categorys) {
            cbbTheLoai.addItem(category.getCategoryName());
        }
        List<Ghe> ghes = gheService.layAllXeDaps();
        IdUpdateService idus = new IdUpdateService();
        Integer id = idus.getId();
        lbTTSua.setText("Bạn đang sửa sản phẩm có Id là :  " + id);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbbTheLoai = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtKichThuoc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtXuatSu = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnThoat = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        lbTTSua = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Sửa Sản Phẩm");

        cbbTheLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTheLoaiActionPerformed(evt);
            }
        });

        jLabel2.setText("Thể Loại");

        txtTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenActionPerformed(evt);
            }
        });

        jLabel3.setText("Tên");

        txtGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaActionPerformed(evt);
            }
        });

        jLabel4.setText("Giá");

        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });

        jLabel5.setText("Số Lượng");

        txtKichThuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKichThuocActionPerformed(evt);
            }
        });

        jLabel6.setText("Kích Thước");

        txtXuatSu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtXuatSuActionPerformed(evt);
            }
        });

        jLabel7.setText("Xuất Sứ");

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        lbTTSua.setText("jLabel8");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(lbTTSua))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbbTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTen))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtKichThuoc, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtXuatSu)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE))))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5)
                                .addComponent(jLabel7))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(btnSua)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnThoat)))))
                .addContainerGap(100, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(132, 132, 132))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(lbTTSua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtXuatSu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThoat)
                    .addComponent(btnSua))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenActionPerformed

    private void txtGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaActionPerformed

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoLuongActionPerformed

    private void txtKichThuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKichThuocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKichThuocActionPerformed

    private void txtXuatSuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtXuatSuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtXuatSuActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        String so = "^[-?0-9\\.]*$";
        String chu = "^[a-zA-Z\\s]*$";
        String ten = txtTen.getText().trim();
        String priceString = txtGia.getText().trim();
        String quantityString = txtSoLuong.getText().trim();
        String size = txtKichThuoc.getText().trim();
        String origin = txtXuatSu.getText().trim();
        if (ten.isEmpty() || priceString.isEmpty() || quantityString.isEmpty() || size.isEmpty() || origin.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chắc là không được bỏ trống :)) ");
            return;
        }
        if (priceString.replaceAll("[^ ]", "").length() > 0) {
            JOptionPane.showMessageDialog(this, "Chắc là Giá viết liền và không chứa khoẳng trắng rồi . Vui lòng xóa các khoảng trắng đê :))", "Thông Báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (quantityString.replaceAll("[^ ]", "").length() > 0) {
            JOptionPane.showMessageDialog(this, "Chắc là Số lượng viết liền và không chưa khoảng trắng rồi :)). Vui lòng xóa các khoảng trắng đê :))", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (size.replaceAll("[^ ]", "").length() > 0) {
            JOptionPane.showMessageDialog(this, "Chắc là Kích Thước viết liền và không chưa khoảng trắng :)). Vui lòng xóa các khoảng trắng đê :))", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (quantityString.length() >= 20) {
            JOptionPane.showMessageDialog(this, "chắc là Độ dài số lượng vượt quá độ dài cho phép rồi :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (ten.length() >= 30) {
            JOptionPane.showMessageDialog(this, "Chắc là Độ dài tên vượt quá độ dài cho phép rồi :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (priceString.length() >= 20) {
            JOptionPane.showMessageDialog(this, "Chắc là Độ dài Giá vợt quá độ dài cho phép rồi :))", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (origin.length() >= 20) {
            JOptionPane.showMessageDialog(this, "Chắc là xuất sứ vượt quá độ dài cho phép rồi :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String soLuongString = quantityString.replaceAll("[-]{2}", "");
        if (soLuongString.isEmpty() || soLuongString.equalsIgnoreCase("-")) {
            JOptionPane.showMessageDialog(this, "Chắc là số lượng phải là số cơ :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (soLuongString.contains(",")) {
            JOptionPane.showMessageDialog(this, "Chắc là số lượng không được chứa dấu ',' đâu :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!soLuongString.matches(so)) {
            JOptionPane.showMessageDialog(this, "Chắc là số lượng phải là số cơ :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        double soLuong = Double.parseDouble(soLuongString);
        if (Math.floor(soLuong) != soLuong) {
            JOptionPane.showMessageDialog(this, "Chắc là số lượng phải là Số nguyên cơ :))", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (soLuong <= 0) {
            JOptionPane.showMessageDialog(this, "Chắc là Số lượng phải lớn hơn 0 cơ :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (soLuong >= 1000) {
            JOptionPane.showMessageDialog(this, "Chắc là Số lượng phải nhỏ hơn 1000 cơ :))", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int soLuongUpdate = (int) Math.round(soLuong);

        if (size.length() >= 20) {
            JOptionPane.showMessageDialog(this, "Chắc là độ dài kích thước vượt quá độ dài cho phép rồi :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String sizeString = size.replaceAll("[-]{2}", "");
        if (sizeString.isEmpty() || sizeString.equalsIgnoreCase("-")) {
            JOptionPane.showMessageDialog(this, "Chắc là Kích Thước phải là số cơ :))  ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (sizeString.contains(",")) {
            JOptionPane.showMessageDialog(this, "Chắc là Kích Thước không chứa đấu ',' cơ Size khong duoc chua dau ','", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!sizeString.matches(so)) {
            JOptionPane.showMessageDialog(this, "Chắc Kích thước phải là số cơ :))", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        double sizedb = Double.parseDouble(sizeString);
        if (Math.floor(sizedb) != sizedb) {
            JOptionPane.showMessageDialog(this, "Chắc kích thước phải là số nguyên cơ :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (sizedb <= 0) {
            JOptionPane.showMessageDialog(this, "Chắc kích thước phải lớn hơn 0 ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (sizedb >= 30) {
            JOptionPane.showMessageDialog(this, "Chắc kích thước phải nhỏ hơn 30 cơ :))) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!origin.matches(chu)) {
            JOptionPane.showMessageDialog(this, "Chắc Xuất sứ phải là chữ cơ :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String priceCheck = priceString.replaceAll("[-]{2}", "");
        if (priceCheck.isEmpty() || priceCheck.equalsIgnoreCase("-")) {
            JOptionPane.showMessageDialog(this, "Chắc là giá phải là số cơ :))", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (priceString.contains(",")) {
            JOptionPane.showMessageDialog(this, "Chắc là giá không được chứa dấu ',' đâu :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!priceString.matches(so)) {
            JOptionPane.showMessageDialog(this, "Chắc là giá phải là số cơ :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        double pricedb = Double.parseDouble(priceCheck);
        if (pricedb <= 0) {
            JOptionPane.showMessageDialog(this, "Chắc là giá Phải lớn hơn 0 cơ :)) ", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (pricedb >= 99999999) {
            JOptionPane.showMessageDialog(this, "Chắc là giá Phải lớn hơn 99999999 cơ :))", "Thong Bao", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int sizeUpdate = (int) Math.round(sizedb);
        try {

            String Category = (String) cbbTheLoai.getSelectedItem();
            Integer CategoryId = null;
            List<Category> categorys = categoryService.layAllCategory();
            for (Category category : categorys) {
                if (Category.equals(category.getCategoryName())) {
                    CategoryId = category.getId();
                }
            }
            String name = txtTen.getText();
            BigDecimal price = BigDecimal.valueOf(pricedb);
            // TODO add your handling code here:
            IdUpdateService idus = new IdUpdateService();
            Integer id = idus.getId();
            Ghe xd = new Ghe(id, CategoryId, name, price, soLuongUpdate, sizeUpdate, origin, true);
            // TODO add your handling code here:
            if (gheService.sua(id, xd) == true) {
                JOptionPane.showMessageDialog(this, "Chắc là sửa thành công rồi :)) ");
            } else {
                JOptionPane.showMessageDialog(this, "Chắc là sửa thất bại rồi :)) ");
            }
            QuanLyForm qlf = new QuanLyForm();
            qlf.hienthi();
            this.dispose();
        } catch (SQLException ex) {

        }


    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void cbbTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTheLoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbTheLoaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SuaForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThoat;
    private javax.swing.JComboBox<String> cbbTheLoai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lbTTSua;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtKichThuoc;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtXuatSu;
    // End of variables declaration//GEN-END:variables
}
